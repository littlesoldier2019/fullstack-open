{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hongngocnguyen/practice/fullstack-open/2_server_interaction/country/src/index.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"./index.css\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst App = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [countries, setCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [weather, setWeather] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n\n  const GetWeatherData = city => {\n    _s();\n\n    useEffect(() => {\n      axios.get(`http://api.weatherstack.com/current?access_key=${API_KEY}&query=${city}`).then(response => {\n        setWeather(response.data);\n      });\n    }, [city]);\n    return weather;\n  };\n\n  _s(GetWeatherData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const handleInput = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const listCountry = () => {\n    const filteredCountries = countries === null || countries === void 0 ? void 0 : countries.filter(country => {\n      return country.name.toLowerCase().startsWith(searchTerm.toLowerCase());\n    });\n\n    const showCountryInfo = country => {\n      var _country$languages, _weatherData$current, _weatherData$current2, _weatherData$current3, _weatherData$current4;\n\n      const city = country.capital;\n      const weatherData = GetWeatherData(city);\n      const languagesList = (_country$languages = country.languages) === null || _country$languages === void 0 ? void 0 : _country$languages.map(language => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: language === null || language === void 0 ? void 0 : language.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this);\n      });\n      const watherIcons = weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$current = weatherData.current) === null || _weatherData$current === void 0 ? void 0 : _weatherData$current.weather_icons.map((icon, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: \"weather icon\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 26\n      }, this));\n\n      const weatherList = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$current2 = weatherData.current) === null || _weatherData$current2 === void 0 ? void 0 : _weatherData$current2.temperature]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), watherIcons, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind: \", weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$current3 = weatherData.current) === null || _weatherData$current3 === void 0 ? void 0 : _weatherData$current3.wind_speed, \" mph direction\", \" \", weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$current4 = weatherData.current) === null || _weatherData$current4 === void 0 ? void 0 : _weatherData$current4.wind_dir]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Capital: \", country.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Polulation: \", country.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), languagesList, /*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"flag\",\n          src: country.flag,\n          alt: \"country flag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Weather in \", city || \"city\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), weatherList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    };\n\n    if (filteredCountries.length === 1) {\n      const content = showCountryInfo(filteredCountries[0]);\n      return content;\n    }\n\n    if (filteredCountries.length > 1 && filteredCountries.length < 10) {\n      return filteredCountries.map((country, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: country.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (filteredCountries.length >= 10) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Too many matches, specify another filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No countries found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country\",\n        children: \"Find country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"country\",\n        name: \"country\",\n        value: searchTerm,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: listCountry(countries)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"2UtD6FqWvluCFeFJDsWufAQhJoQ=\");\n\n_c = App;\nexport default App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 109,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hongngocnguyen/practice/fullstack-open/2_server_interaction/country/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","API_KEY","process","env","REACT_APP_API_KEY","App","countries","setCountries","searchTerm","setSearchTerm","weather","setWeather","get","then","response","data","GetWeatherData","city","handleInput","event","target","value","listCountry","filteredCountries","filter","country","name","toLowerCase","startsWith","showCountryInfo","capital","weatherData","languagesList","languages","map","language","watherIcons","current","weather_icons","icon","index","weatherList","temperature","wind_speed","wind_dir","population","flag","length","content","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"./index.css\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [weather, setWeather] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then((response) => {\n      setCountries(response.data);\n    });\n  }, []);\n\n  const GetWeatherData = (city) => {\n    useEffect(() => {\n      axios\n        .get(\n          `http://api.weatherstack.com/current?access_key=${API_KEY}&query=${city}`\n        )\n        .then((response) => {\n          setWeather(response.data);\n        });\n    }, [city]);\n    return weather;\n  };\n\n  const handleInput = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const listCountry = () => {\n    const filteredCountries = countries?.filter((country) => {\n      return country.name.toLowerCase().startsWith(searchTerm.toLowerCase());\n    });\n\n    const showCountryInfo = (country) => {\n      const city = country.capital;\n      const weatherData = GetWeatherData(city);\n      const languagesList = country.languages?.map((language) => {\n        return <p>{language?.name}</p>;\n      });\n      const watherIcons = weatherData?.current?.weather_icons.map(\n        (icon, index) => <img src={icon} alt=\"weather icon\" key={index} />\n      );\n      const weatherList = (\n        <div>\n          <p>Temperature: {weatherData?.current?.temperature}</p>\n          {watherIcons}\n          <p>\n            Wind: {weatherData?.current?.wind_speed} mph direction{\" \"}\n            {weatherData?.current?.wind_dir}\n          </p>\n        </div>\n      );\n      return (\n        <div>\n          <h1>{country.name}</h1>\n          <p>Capital: {country.capital}</p>\n          <p>Polulation: {country.population}</p>\n          <h2>Languages</h2>\n          {languagesList}\n          <img class=\"flag\" src={country.flag} alt=\"country flag\" />\n          <h2>Weather in {city || \"city\"}</h2>\n          {weatherList}\n        </div>\n      );\n    };\n    if (filteredCountries.length === 1) {\n      const content = showCountryInfo(filteredCountries[0]);\n      return content;\n    }\n    if (filteredCountries.length > 1 && filteredCountries.length < 10) {\n      return filteredCountries.map((country, index) => (\n        <p key={index}>{country.name}</p>\n      ));\n    }\n    if (filteredCountries.length >= 10) {\n      return <p>Too many matches, specify another filter</p>;\n    }\n    return <p>No countries found</p>;\n  };\n\n  return (\n    <div>\n      <form>\n        <label htmlFor=\"country\">Find country</label>\n        <br />\n        <input\n          type=\"text\"\n          id=\"country\"\n          name=\"country\"\n          value={searchTerm}\n          onChange={handleInput}\n        />\n      </form>\n      <div>{listCountry(countries)}</div>\n    </div>\n  );\n};\n\nexport default App;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}
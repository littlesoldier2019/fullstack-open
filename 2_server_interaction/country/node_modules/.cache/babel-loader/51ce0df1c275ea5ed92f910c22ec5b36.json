{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hongngocnguyen/practice/fullstack-open/2_server_interaction/country/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"./index.css\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst GetWeatherData = city => {\n  _s();\n\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    axios.get(`http://api.weatherstack.com/current?access_key=${API_KEY}&query=${city}`).then(response => {\n      setWeather(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  return weather;\n};\n\n_s(GetWeatherData, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n\n_c = GetWeatherData;\n\nconst App = () => {\n  _s2();\n\n  const [countries, setCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      setCountries(response.data);\n      console.log(response.data);\n    });\n  }, []);\n\n  const handleInput = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const listCountry = () => {\n    const filteredCountries = countries === null || countries === void 0 ? void 0 : countries.filter(country => {\n      return country.name.toLowerCase().startsWith(searchTerm.toLowerCase());\n    });\n    console.log(searchTerm);\n    console.log(countries);\n    console.log(filteredCountries);\n\n    if (filteredCountries.length === 1) {\n      var _filteredCountries$0$, _weatherData$current, _weatherData$current2;\n\n      const languagesList = (_filteredCountries$0$ = filteredCountries[0].languages) === null || _filteredCountries$0$ === void 0 ? void 0 : _filteredCountries$0$.map(language => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: language === null || language === void 0 ? void 0 : language.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this);\n      });\n      const city = filteredCountries[0].capital;\n      const weatherData = GetWeatherData(city);\n\n      const weatherList = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$current = weatherData.current) === null || _weatherData$current === void 0 ? void 0 : _weatherData$current.temperature]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$current2 = weatherData.current) === null || _weatherData$current2 === void 0 ? void 0 : _weatherData$current2.weather_icons,\n          alt: \"weather icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Wind: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: filteredCountries[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Capital: \", filteredCountries[0].capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Polulation: \", filteredCountries[0].population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), languagesList, /*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"flag\",\n          src: filteredCountries[0].flag,\n          alt: \"country flag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Weather in \", city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), weatherList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (filteredCountries.length > 1 && filteredCountries.length < 10) {\n      return filteredCountries.map((country, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: country.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (filteredCountries.length >= 10) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Too many matches, specify another filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No countries found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country\",\n        children: \"Find country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"country\",\n        name: \"country\",\n        value: searchTerm,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: listCountry(countries)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"JRVniZN2nH0tTRnPS/CsWCpG+IM=\");\n\n_c2 = App;\nexport default App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 109,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetWeatherData\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/hongngocnguyen/practice/fullstack-open/2_server_interaction/country/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","API_KEY","process","env","REACT_APP_API_KEY","GetWeatherData","city","weather","setWeather","get","then","response","data","console","log","App","countries","setCountries","searchTerm","setSearchTerm","handleInput","event","target","value","listCountry","filteredCountries","filter","country","name","toLowerCase","startsWith","length","languagesList","languages","map","language","capital","weatherData","weatherList","current","temperature","weather_icons","population","flag","index","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"./index.css\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst GetWeatherData = (city) => {\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\n        `http://api.weatherstack.com/current?access_key=${API_KEY}&query=${city}`\n      )\n      .then((response) => {\n        setWeather(response.data);\n        console.log(response.data);\n      });\n  }, []);\n\n  return weather;\n};\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then((response) => {\n      setCountries(response.data);\n      console.log(response.data);\n    });\n  }, []);\n\n  const handleInput = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const listCountry = () => {\n    const filteredCountries = countries?.filter((country) => {\n      return country.name.toLowerCase().startsWith(searchTerm.toLowerCase());\n    });\n    console.log(searchTerm);\n    console.log(countries);\n    console.log(filteredCountries);\n    if (filteredCountries.length === 1) {\n      const languagesList = filteredCountries[0].languages?.map((language) => {\n        return <p>{language?.name}</p>;\n      });\n      const city = filteredCountries[0].capital;\n      const weatherData = GetWeatherData(city);\n      const weatherList = (\n        <div>\n          <p>Temperature: {weatherData?.current?.temperature}</p>\n          <img src={weatherData?.current?.weather_icons} alt=\"weather icon\" />\n          <p>Wind: {}</p>\n        </div>\n      );\n      return (\n        <div>\n          <h1>{filteredCountries[0].name}</h1>\n          <p>Capital: {filteredCountries[0].capital}</p>\n          <p>Polulation: {filteredCountries[0].population}</p>\n          <h2>Languages</h2>\n          {languagesList}\n          <img\n            class=\"flag\"\n            src={filteredCountries[0].flag}\n            alt=\"country flag\"\n          />\n          <h2>Weather in {city}</h2>\n          {weatherList}\n        </div>\n      );\n    }\n    if (filteredCountries.length > 1 && filteredCountries.length < 10) {\n      return filteredCountries.map((country, index) => (\n        <p key={index}>{country.name}</p>\n      ));\n    }\n    if (filteredCountries.length >= 10) {\n      return <p>Too many matches, specify another filter</p>;\n    }\n    return <p>No countries found</p>;\n  };\n\n  return (\n    <div>\n      <form>\n        <label htmlFor=\"country\">Find country</label>\n        <br />\n        <input\n          type=\"text\"\n          id=\"country\"\n          name=\"country\"\n          value={searchTerm}\n          onChange={handleInput}\n        />\n      </form>\n      <div>{listCountry(countries)}</div>\n    </div>\n  );\n};\n\nexport default App;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}
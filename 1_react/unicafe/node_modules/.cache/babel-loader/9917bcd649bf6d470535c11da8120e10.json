{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hongngocnguyen/practice/fullstack-open/1_react/unicafe/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Button = ({\n  handleGood,\n  handleNeutral,\n  handleBad\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGood(),\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleNeutral(),\n      children: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleBad(),\n      children: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistic;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  const sum = good + bad + neutral;\n  const average = sum / 3;\n  const positive = sum === 0 ? false : (good + neutral) / sum * 100;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"good\",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"neutral\",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"bad\",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"all\",\n        value: sum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"average\",\n        value: average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"positive\",\n        value: positive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => setGood(good + 1);\n\n  const handleNeutral = () => setNeutral(neutral + 1);\n\n  const handleBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      handleGood: handleGood,\n      handleNeutral: handleNeutral,\n      handleBad: handleBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/hongngocnguyen/practice/fullstack-open/1_react/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","handleGood","handleNeutral","handleBad","Statistic","text","value","Statistics","good","neutral","bad","sum","average","positive","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Button = ({ handleGood, handleNeutral, handleBad }) => {\n  return (\n    <div>\n      <button onClick={() => handleGood()}>Good</button>\n      <button onClick={() => handleNeutral()}>Neutral</button>\n      <button onClick={() => handleBad()}>Bad</button>\n    </div>\n  );\n};\n\nconst Statistic = ({ text, value }) => {\n  return (\n    <tr>\n      <td>{text}</td>\n      <td>{value}</td>\n    </tr>\n  );\n};\nconst Statistics = ({ good, neutral, bad }) => {\n  const sum = good + bad + neutral;\n  const average = sum / 3;\n  const positive = sum === 0 ? false : ((good + neutral) / sum) * 100;\n  return (\n    <table>\n      <tbody>\n        <Statistic text=\"good\" value={good} />\n        <Statistic text=\"neutral\" value={neutral} />\n        <Statistic text=\"bad\" value={bad} />\n        <Statistic text=\"all\" value={sum} />\n        <Statistic text=\"average\" value={average} />\n        <Statistic text=\"positive\" value={positive} />\n      </tbody>\n    </table>\n  );\n};\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => setGood(good + 1);\n  const handleNeutral = () => setNeutral(neutral + 1);\n  const handleBad = () => setBad(bad + 1);\n\n  return (\n    <>\n      <Button\n        handleGood={handleGood}\n        handleNeutral={handleNeutral}\n        handleBad={handleBad}\n      />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hongngocnguyen/practice/fullstack-open/2_server_interaction/country/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n\n  const handleInput = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const listCountry = countries => {\n    const filteredCountries = countries === null || countries === void 0 ? void 0 : countries.filter(country => country.name === searchTerm);\n\n    if (countries.length > 0 && countries.length < 10) {\n      return countries.map(country => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: country.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 41\n      }, this));\n    }\n\n    if (countries.length >= 10) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Too many matches, specify another filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    }\n\n    return;\n  }; // const handleInput = (event) => {\n  //   setNewName({ ...newName, [event.target.name]: event.target.value });\n  // };\n  // const handleFilter = (event) => {\n  //   setFilteredName(event.target.value);\n  //   const filteredPerson = persons?.filter((person) => {\n  //     return person.name\n  //       .toLocaleLowerCase()\n  //       .includes(filteredName?.toLocaleLowerCase());\n  //   });\n  //   filteredName.length > 0 ? setPersons(filteredPerson) : setPersons(persons);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country\",\n        children: \"Find country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"country\",\n        name: \"country\",\n        value: searchTerm,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: listCountry(countries)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JRVniZN2nH0tTRnPS/CsWCpG+IM=\");\n\n_c = App;\nexport default App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hongngocnguyen/practice/fullstack-open/2_server_interaction/country/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","App","countries","setCountries","searchTerm","setSearchTerm","get","then","response","data","handleInput","event","target","value","listCountry","filteredCountries","filter","country","name","length","map","render","document","getElementById"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACM,GAAN,CAAU,sCAAV,EAAkDC,IAAlD,CAAwDC,QAAD,IAAc;AACnEL,MAAAA,YAAY,CAACK,QAAQ,CAACC,IAAV,CAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BN,IAAAA,aAAa,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAIZ,SAAD,IAAe;AACjC,UAAMa,iBAAiB,GAAGb,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEc,MAAX,CACvBC,OAAD,IAAaA,OAAO,CAACC,IAAR,KAAiBd,UADN,CAA1B;;AAGA,QAAIF,SAAS,CAACiB,MAAV,GAAmB,CAAnB,IAAwBjB,SAAS,CAACiB,MAAV,GAAmB,EAA/C,EAAmD;AACjD,aAAOjB,SAAS,CAACkB,GAAV,CAAeH,OAAD,iBAAa;AAAA,kBAAIA,OAAO,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAA3B,CAAP;AACD;;AACD,QAAIhB,SAAS,CAACiB,MAAV,IAAoB,EAAxB,EAA4B;AAC1B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD;AACD,GAXD,CAbgB,CA0BhB;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,SAFL;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,KAAK,EAAEf,UAJT;AAKE,QAAA,QAAQ,EAAEM;AALZ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA,gBAAMI,WAAW,CAACZ,SAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1DD;;GAAMD,G;;KAAAA,G;AA4DN,eAAeA,GAAf;AAEAF,QAAQ,CAACsB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then((response) => {\n      setCountries(response.data);\n    });\n  }, []);\n\n  const handleInput = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const listCountry = (countries) => {\n    const filteredCountries = countries?.filter(\n      (country) => country.name === searchTerm\n    );\n    if (countries.length > 0 && countries.length < 10) {\n      return countries.map((country) => <p>{country.name}</p>);\n    }\n    if (countries.length >= 10) {\n      return <p>Too many matches, specify another filter</p>;\n    }\n    return;\n  };\n\n  // const handleInput = (event) => {\n  //   setNewName({ ...newName, [event.target.name]: event.target.value });\n  // };\n\n  // const handleFilter = (event) => {\n  //   setFilteredName(event.target.value);\n\n  //   const filteredPerson = persons?.filter((person) => {\n  //     return person.name\n  //       .toLocaleLowerCase()\n  //       .includes(filteredName?.toLocaleLowerCase());\n  //   });\n\n  //   filteredName.length > 0 ? setPersons(filteredPerson) : setPersons(persons);\n  // };\n\n  return (\n    <div>\n      <form>\n        <label htmlFor=\"country\">Find country</label>\n        <br />\n        <input\n          type=\"text\"\n          id=\"country\"\n          name=\"country\"\n          value={searchTerm}\n          onChange={handleInput}\n        />\n      </form>\n      <div>{listCountry(countries)}</div>\n    </div>\n  );\n};\n\nexport default App;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}